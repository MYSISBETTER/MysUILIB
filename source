-- UI Library for Executor
local UILibrary = {}

-- Function to make a frame draggable
local function makeDraggable(frame, handle)
    local dragging, dragInput, dragStart, startPos

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Function to create the main UI
function UILibrary:CreateUI(title)
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ExecutorUILibrary"
    ScreenGui.Parent = game.CoreGui -- Executors usually require CoreGui for visibility

    -- Create Main Frame (Content Area)
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true

    -- Add UI Corner
    local MainUICorner = Instance.new("UICorner")
    MainUICorner.CornerRadius = UDim.new(0, 10)
    MainUICorner.Parent = MainFrame

    -- Add Title Label for the Main Frame
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Parent = MainFrame
    TitleLabel.Size = UDim2.new(1, 0, 0, 40)
    TitleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    TitleLabel.Text = title or "UI Library"
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Font = Enum.Font.Gotham
    TitleLabel.TextSize = 18
    TitleLabel.BorderSizePixel = 0

    -- Add UI Corner to Title Label
    local TitleLabelUICorner = Instance.new("UICorner")
    TitleLabelUICorner.CornerRadius = UDim.new(0, 10)
    TitleLabelUICorner.Parent = TitleLabel

    -- Create Content Frame
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Parent = MainFrame
    ContentFrame.Size = UDim2.new(1, 0, 1, -40)
    ContentFrame.Position = UDim2.new(0, 0, 0, 40)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    ContentFrame.BorderSizePixel = 0

    -- Add UI Corner to Content Frame
    local ContentUICorner = Instance.new("UICorner")
    ContentUICorner.CornerRadius = UDim.new(0, 10)
    ContentUICorner.Parent = ContentFrame

    -- Create Tab Bar (Independent)
    local TabBar = Instance.new("Frame")
    TabBar.Name = "TabBar"
    TabBar.Parent = ScreenGui
    TabBar.AnchorPoint = Vector2.new(0, 0.5)
    TabBar.Position = UDim2.new(0.34, 0, 0.5, 0) -- Adjusted to be closer to the main frame
    TabBar.Size = UDim2.new(0, 30, 0, 300)
    TabBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TabBar.BorderSizePixel = 0

    -- Add UI Corner to Tab Bar
    local TabBarUICorner = Instance.new("UICorner")
    TabBarUICorner.CornerRadius = UDim.new(0, 10)
    TabBarUICorner.Parent = TabBar

    -- Create Tab Container for Tab Buttons
    local TabContainer = Instance.new("ScrollingFrame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = TabBar
    TabContainer.Size = UDim2.new(1, 0, 1, 0)
    TabContainer.BackgroundTransparency = 1
    TabContainer.ScrollBarThickness = 0
    TabContainer.CanvasSize = UDim2.new(0, 0, 0, 0)

    -- Add UIListLayout for Tab Buttons
    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Parent = TabContainer
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 5)

    -- Function to add tabs
    function UILibrary:AddTab(tabName)
        -- Create Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = tabName
        TabButton.Parent = TabContainer
        TabButton.Size = UDim2.new(1, -10, 0, 40)
        TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        TabButton.Text = tabName
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextSize = 14
        TabButton.BorderSizePixel = 0

        -- Add UI Corner to Tab Button
        local TabButtonUICorner = Instance.new("UICorner")
        TabButtonUICorner.CornerRadius = UDim.new(0, 10)
        TabButtonUICorner.Parent = TabButton

        -- Create Tab Content Frame
        local TabContent = Instance.new("Frame")
        TabContent.Name = tabName .. "Content"
        TabContent.Parent = ContentFrame
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.Visible = false

        -- Tab Button Functionality
        TabButton.MouseButton1Click:Connect(function()
            for _, frame in pairs(ContentFrame:GetChildren()) do
                if frame:IsA("Frame") then
                    frame.Visible = false
                end
            end
            TabContent.Visible = true
        end)

        -- Adjust CanvasSize for new tabs
        TabContainer.CanvasSize = UDim2.new(0, 0, 0, TabListLayout.AbsoluteContentSize.Y)

        return TabContent
    end

    -- Make MainFrame and TabBar draggable
    makeDraggable(MainFrame, TitleLabel) -- Drags MainFrame using TitleLabel
    makeDraggable(TabBar, TabBar) -- Drags TabBar using itself

    return self
end

return UILibrary
